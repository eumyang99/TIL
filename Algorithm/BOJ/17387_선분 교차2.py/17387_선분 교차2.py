import sys
input = sys.stdin.readline

def ccw(p1, p2, p3): #CCW
    x1, y1 = p1
    x2, y2 = p2
    x3, y3 = p3

    ## p1 -> p2 로 가는 기울기 = A
    ## p1 -> p3 로 가는 기울기 = B
    ## 만약 B > A라면 반시계 방향
    ## B < A라면 시계 방향

    ## {(y2 - y1) / (x2 - x1)} - {(y3 - y1) / (x3 - x1)}에서 각 항에 (x2 - x1)(x3 - x1)를 곱해서 나온 식
    ## (x3-x1)*(y2-y1) - (x2-x1)*(y3-y1) : 이렇게 하면 분모가 0일 때, 그리고 소수점 문제 해결 가능하다
    ## 또한 p1과 p2를 이은 선과, p1과 p3를 이은 선이 1시 50분 처럼 생겼을 때
    ## 음수 양수를 분기처리하는 과정이 생략된다. 

    ## 만약 곱한 (x2 - x1)(x3 - x1) 이 양수라면 p1을 기준으로 두 점 다 왼쪽에 있거나 둘다 오른쪽에 있는 것
        ## 이런 경우는 문제 없음
    ## 반대라면 p1을 기준으로 두 점은 좌우에 있는 것
        ## 이 때 기울기 차이가 {(y2 - y1) / (x2 - x1)} - {(y3 - y1) / (x3 - x1)} 이 식의 값이 양수여야 반시계이다
        ## 그런데 공통으로 곱한 (x2 - x1)(x3 - x1)이 음수가 되기 때문에 여전히 0보다 작을 때 반시계가 된다.

    ## 굉장히 헷갈리는 부분. 사실 제대로 이해 못함...
    ## 벡터에 대한 이해가 있어야 제대로 이해할 수 있을 듯

    temp = (x3-x1)*(y2-y1) - (x2-x1)*(y3-y1)
    if temp > 0:  
        return 1  
    elif temp < 0:  
        return -1
    ## p3이 p1->p2 위에 있는 것(기울기가 같다는 뜻)
    else:  
        return 0  

x1, y1, x2, y2 = map(int, input().split()) #선분 A
x3, y3, x4, y4 = map(int, input().split()) #선분 B
p1, p2, p3, p4 = [x1, y1], [x2, y2], [x3, y3], [x4, y4]
## ccw
## 0 : 선분 위에 점이 있다
## -1 : 선분 시계방향으로 가야 점이 있다
## 1 : 선분 반시계 방향으로 가야 점이 있다
## 0 * 1 : A선분 위에 B의 점 하나가 있다
## 0 * 0 : 일직선 상에 있다

## cross1 = 0 : A선분 위에 B점이 있다
                ## cross2가 0이라면 L을 그리며 확실히 겹치거나 일직선 상에 두 선분이 그려진다.
                ## 일직선 상에 두 선분이 그려질 때 때 만나는지 안만나는지 확인해 봐야 한다.
                ## - - 이렇게 되어 있을 수도 있기 때문
## cross1 = 1 : B의 두 점 모두 A선분 반시계 방향에 있다 (두 선분은 안 겹친다)
## cross1 = -1 : B의 두 점 중 하나는 A선분 반시계 방향에, 남은 한 점은 시계방향에 있다(겹칠 수 있다)
                ## 만약 cross2가 -1이라면 X를 그리며 겹친다.
                ## 만약 cross2가 0이라면 T자로 겹친다


cross1 = ccw(p1, p2, p3) * ccw(p1, p2, p4) #선분 A에서 B에 대한 CCW 값
cross2 = ccw(p3, p4, p1) * ccw(p3, p4, p2) #선분 B에서 A에 대한 CCW 값
ans = 0 #기본값 (교차하지 않음)
if cross1 == cross2 == 0: #모두 0이라면 (한 직선 위에 있으면)
    if min(x1, x2) <= max(x3, x4) and min(x3, x4) <= max(x1, x2) and min(y1, y2) <= max(y3, y4) and min(y3, y4) <= max(y1, y2): #두 직선이 겹치면 (점끼리 만나는 것도 포함)
        ans = 1 #교차
elif cross1 <= 0 and cross2 <= 0: #모두 음수라면
    ans = 1 #교차
print(ans)
